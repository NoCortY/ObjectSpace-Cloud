<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.objectspace.authcenter.dao.MenuDao">
    <!--开启本mapper的namespace下的二级缓存-->
    <!--
        eviction:代表的是缓存回收策略，目前MyBatis提供以下策略。
        (1) LRU,最近最少使用的，一处最长时间不用的对象
        (2) FIFO,先进先出，按对象进入缓存的顺序来移除他们
        (3) SOFT,软引用，移除基于垃圾回收器状态和软引用规则的对象
        (4) WEAK,弱引用，更积极的移除基于垃圾收集器状态和弱引用规则的对象。
        	这里采用的是LRU，  移除最长时间不用的对形象

        flushInterval:刷新间隔时间，单位为毫秒，如果你不配置它，那么当
        SQL被执行的时候才会去刷新缓存。

        size:引用数目，一个正整数，代表缓存最多可以存储多少个对象，不宜设置过大。设置过大会导致内存溢出。
        这里配置的是1024个对象

        readOnly:只读，意味着缓存数据只能读取而不能修改，这样设置的好处是我们可以快速读取缓存，缺点是我们没有
        办法修改缓存，他的默认值是false，不允许我们修改
    -->
    <cache eviction="LRU" type="cn.objectspace.common.cache.MyBatisCache"/>
    <select id="queryMenu" resultType="MenuDto">
        SELECT
        id,title,icon,href,target,category
        FROM
        cloud_menu_info
        WHERE
        page = #{page}
        and role_id = #{roleId}
        and parent is null
        and classify='menu'
        ORDER BY priority ASC
    </select>
    <select id="querySubMenu" resultType="MenuDto">
        SELECT id,title,icon,href,target
        FROM
        cloud_menu_info
        WHERE
        parent = #{parentId}
        and role_id = #{roleId}
    </select>
    <select id="queryStatic" resultType="MenuDto">
    	SELECT
    	title,icon,href
    	<if test="classify=='logo'.toString()">
    	,image
    	</if>
    	FROM
    	cloud_menu_info
    	WHERE
    	classify = #{classify}
    	and page = #{page}
    </select>
    <select id="queryRole" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT
        r.role_id
        FROM
        cloud_user u
        LEFT JOIN cloud_user_role r ON u.user_id = r.user_id
        WHERE
        u.user_email = #{userEmail}
    </select>
    
    <select id="queryPageMenu" resultType="MenuDto">
        SELECT title,icon,href
        FROM cloud_menu_info
        <where>
            <if test="classify!=null and classify!=''">
                classify=#{classify}
            </if>
            <if test="roleId!=null and roleId!=''">
                AND role_id = #{roleId}
            </if>
            <if test="page!=null and page!=''">
                AND page = #{page}
            </if>
        </where>
        ORDER BY priority ASC
    </select>
</mapper>